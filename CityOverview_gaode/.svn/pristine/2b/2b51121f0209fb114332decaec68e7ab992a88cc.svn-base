package com.cetc28.idata.service.impl;

import com.cetc28.idata.dao.JxEcoCoreComDao;
import com.cetc28.idata.service.IJxEcoCoreComService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Created by jianglulu on 2017/11/21.
 */
@Service
public class JxEcoCoreComServiceImpl implements IJxEcoCoreComService {
    @Autowired
    private JxEcoCoreComDao jxEcoCoreComDao;


    @Override
    public Map queryCoreComData() {
        Map result=new HashMap();
        List<String> bhRange=jxEcoCoreComDao.queryBhRange();
        String des=jxEcoCoreComDao.queryCoredes("1");
        result.put("des",des);
        List bhMcRangeList=new ArrayList();
        for(String bhValue:bhRange){
            Map<String,String> bhMc=new HashMap();
            String mc=jxEcoCoreComDao.queryMcByBh(bhValue);
            bhMc.put("bhValue",bhValue);
            bhMc.put("mc", mc);
            bhMcRangeList.add(bhMc);
        }
        result.put("bhRange",bhMcRangeList);
        Map param=new HashMap();

//        param.put("bhValue",bhRange.get(0));
        param.put("id","1");
        result.put("keycom",jxEcoCoreComDao.queryCoreCom(param));
//        param.put("bhValue","003001001");
        result.put("mapcom",jxEcoCoreComDao.queryCoreCom(param));
        //组装数据
        String[] type=new String[]{"国企","中外合资","股份制","外资","私企"};
        List typeList=new ArrayList();
        for (int i = 0; i <type.length ; i++) {
            param.put("type",type[i]);
            Integer a=jxEcoCoreComDao.queryType(param);
            typeList.add(a);
        }
        result.put("typeList",typeList);

        Integer[] age=new Integer[]{0,5,10,15,20,25};
        List ageList=new ArrayList();
        for (int i = 0; i <age.length ; i++) {
            if(i==5){
                param.put("fromage",String.valueOf(age[i]));
                param.put("toage","");
            }else {
                param.put("fromage",String.valueOf(age[i]));
                param.put("toage",String.valueOf(age[i]+5));
            }
            Integer b=jxEcoCoreComDao.queryAge(param);
            ageList.add(b);
        }
        result.put("ageList",ageList);

        Integer[] value=new Integer[]{0,2,5,10,15,20,25,30};
        List valueList=new ArrayList();
        for (int i = 0; i <value.length ; i++) {
            if (i==0){
                param.put("fromvalue",String.valueOf(value[i]));
                param.put("tovalue",String.valueOf(value[i]+2));
            }else if(i==1){
                param.put("fromvalue",String.valueOf(value[i]));
                param.put("tovalue",String.valueOf(value[i]+3));
            }else if(i==7){
                param.put("fromvalue",String.valueOf(value[i]));
                param.put("tovalue","");
            }else {
                param.put("fromvalue",String.valueOf(value[i]));
                param.put("tovalue",String.valueOf(value[i]+5));
            }
            Integer c=jxEcoCoreComDao.queryValue(param);
            valueList.add(c);
        }
        result.put("valueList",valueList);
        return result;
    }

    @Override
    public Map queryComByCondition(String bhname, String industryname) {
        Map result=new HashMap();
        List<String> bhRange=jxEcoCoreComDao.queryBhRange();
        List bhMcRangeList=new ArrayList();
        for(String bhValue:bhRange){
            Map<String,String> bhMc=new HashMap();
            String mc=jxEcoCoreComDao.queryMcByBh(bhValue);
            bhMc.put("bhValue",bhValue);
            bhMc.put("mc", mc);
            bhMcRangeList.add(bhMc);
        }
        result.put("bhRange",bhMcRangeList);
        Map param=new HashMap();
//        param.put("bhValue",bhRange.get(0));
        String id =jxEcoCoreComDao.queryCoreID(industryname);
        String des=jxEcoCoreComDao.queryCoredes(id);
        result.put("des",des);
        param.put("id",id);
        result.put("keycom",jxEcoCoreComDao.queryCoreCom(param));
        param.put("bhValue",bhname);
        result.put("mapcom",jxEcoCoreComDao.queryCoreCom(param));
        //组装数据
        String[] type=new String[]{"国企","中外合资","股份制","外资","私企"};
        List typeList=new ArrayList();
        for (int i = 0; i <type.length ; i++) {
            param.put("type",type[i]);
            Integer a=jxEcoCoreComDao.queryType(param);
            typeList.add(a);
        }
        result.put("typeList",typeList);

        Integer[] age=new Integer[]{0,5,10,15,20,25};
        List ageList=new ArrayList();
        for (int i = 0; i <age.length ; i++) {
            if(i==5){
                param.put("fromage",String.valueOf(age[i]));
                param.put("toage","");
            }else {
                param.put("fromage",String.valueOf(age[i]));
                param.put("toage",String.valueOf(age[i]+5));
            }
            Integer b=jxEcoCoreComDao.queryAge(param);
            ageList.add(b);
        }
        result.put("ageList",ageList);


        Integer[] value=new Integer[]{0,2,5,10,15,20,25,30};
        List valueList=new ArrayList();
        for (int i = 0; i <value.length ; i++) {
            if (i==0){
                param.put("fromvalue",String.valueOf(value[i]));
                param.put("tovalue",String.valueOf(value[i]+2));
            }else if(i==1){
                param.put("fromvalue",String.valueOf(value[i]));
                param.put("tovalue",String.valueOf(value[i]+3));
            }else if(i==7){
                param.put("fromvalue",String.valueOf(value[i]));
                param.put("tovalue","");
            }else {
                param.put("fromvalue",String.valueOf(value[i]));
                param.put("tovalue",String.valueOf(value[i]+5));
            }
            Integer c=jxEcoCoreComDao.queryValue(param);
            valueList.add(c);
        }
        result.put("valueList",valueList);
        return result;
    }

    @Override
    public List serchCorecom(String name) {
        List<HashMap<String,String>> list=jxEcoCoreComDao.serchCorecom(name);
        List<HashMap<String,String>> result=new ArrayList();
        for(HashMap a:list){
            String sname= (String) a.get("NAME");
            boolean flag=false;
            for(HashMap b:result){
                String bname= (String) b.get("NAME");
                if(bname.equals(sname)){
                    flag=true;
                    break;
                }
            }
            if(!flag){
                result.add(a);
            }
        }
        return result;
    }

    @Override
    public List queryAll() {
        return jxEcoCoreComDao.queryAll();
    }
}
